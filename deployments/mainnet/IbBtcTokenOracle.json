{
  "address": "0x3A360A00f781ec5130a8E1e406D7eE144F756346",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ITokenOracle",
          "name": "btcOracle_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "IBBTC",
      "outputs": [
        {
          "internalType": "contract IXToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WIBBTC",
      "outputs": [
        {
          "internalType": "contract IXToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "btcOracle",
      "outputs": [
        {
          "internalType": "contract ITokenOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "getPriceInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_priceInUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x46465ac4c3eb26dd9450bf8aea487bea7cdd29c6176cd35a54bcb99f20374322",
  "receipt": {
    "to": null,
    "from": "0x76d266DFD3754f090488ae12F6Bd115cD7E77eBD",
    "contractAddress": "0x3A360A00f781ec5130a8E1e406D7eE144F756346",
    "transactionIndex": 5,
    "gasUsed": "346925",
    "logsBloom": "0x
    "blockHash": "0xe06a79a190c52a8897c0576ce5335158a7f7b7db24827ce63347f00918ce662b",
    "transactionHash": "0x46465ac4c3eb26dd9450bf8aea487bea7cdd29c6176cd35a54bcb99f20374322",
    "logs": [],
    "blockNumber": 15546245,
    "cumulativeGasUsed": "669803",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE2131907E2A999D60e765660e96dEcca0d4372d0"
  ],
  "numDeployments": 2,
  "solcInputHash": "8b654c506c10a4071125075f82070c93",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ITokenOracle\",\"name\":\"btcOracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IBBTC\",\"outputs\":[{\"internalType\":\"contract IXToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WIBBTC\",\"outputs\":[{\"internalType\":\"contract IXToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcOracle\",\"outputs\":[{\"internalType\":\"contract ITokenOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"getPriceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUsd(address)\":{\"params\":{\"token_\":\"The address of asset\"},\"returns\":{\"_priceInUsd\":\"The USD price\"}}},\"title\":\"Oracle for ibBTC token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"btcOracle()\":{\"notice\":\"BTC/USD oracle\"},\"getPriceInUsd(address)\":{\"notice\":\"Get USD (or equivalent) price of an asset\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/tokens/IbBtcTokenOracle.sol\":\"IbBtcTokenOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/badger/IXToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IXToken {\\n    function pricePerShare() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x290be65d98c0cb3c357550cea1c5f785e0083d7d7cea32356593968f1c0688f2\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n\\n    /**\\n     * @notice Get quote\\n     * @param tokenIn_ The address of assetIn\\n     * @param tokenOut_ The address of assetOut\\n     * @param amountIn_ Amount of input token\\n     * @return _amountOut Amount out\\n     */\\n    function quote(\\n        address tokenIn_,\\n        address tokenOut_,\\n        uint256 amountIn_\\n    ) external view returns (uint256 _amountOut);\\n\\n    /**\\n     * @notice Get quote in USD (or equivalent) amount\\n     * @param token_ The address of assetIn\\n     * @param amountIn_ Amount of input token.\\n     * @return amountOut_ Amount in USD\\n     */\\n    function quoteTokenToUsd(address token_, uint256 amountIn_) external view returns (uint256 amountOut_);\\n\\n    /**\\n     * @notice Get quote from USD (or equivalent) amount to amount of token\\n     * @param token_ The address of assetOut\\n     * @param amountIn_ Input amount in USD\\n     * @return _amountOut Output amount of token\\n     */\\n    function quoteUsdToToken(address token_, uint256 amountIn_) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0xb48d57d83e75abecacbd065d3df55ee50eef4998fad94560cb1dbb0644049caa\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/ITokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ITokenOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x0a458745d97e56d125d348a597133af8572f34a7830c17d91b82cf8229c1492f\",\"license\":\"MIT\"},\"contracts/periphery/tokens/IbBtcTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../interfaces/periphery/IOracle.sol\\\";\\nimport \\\"../../interfaces/periphery/ITokenOracle.sol\\\";\\nimport \\\"../../interfaces/external/badger/IXToken.sol\\\";\\n\\n/**\\n * @title Oracle for ibBTC token\\n */\\ncontract IbBtcTokenOracle is ITokenOracle {\\n    IXToken public constant IBBTC = IXToken(0xc4E15973E6fF2A35cC804c2CF9D2a1b817a8b40F);\\n    IXToken public constant WIBBTC = IXToken(0x8751D4196027d4e6DA63716fA7786B5174F04C15);\\n\\n    /// @notice BTC/USD oracle\\n    ITokenOracle public immutable btcOracle;\\n\\n    constructor(ITokenOracle btcOracle_) {\\n        btcOracle = btcOracle_;\\n    }\\n\\n    /// @inheritdoc ITokenOracle\\n    function getPriceInUsd(address token_) external view override returns (uint256 _priceInUsd) {\\n        if (token_ == address(IBBTC)) {\\n            return (btcOracle.getPriceInUsd(address(0)) * IBBTC.pricePerShare()) / 1e18;\\n        }\\n        if (token_ == address(WIBBTC)) {\\n            return (btcOracle.getPriceInUsd(address(0)) * IBBTC.pricePerShare()) / WIBBTC.pricePerShare();\\n        }\\n\\n        revert(\\\"invalid-ibbtc-related-token\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x670e19e4c9c8e607353ff9928bbd4aa692a04ac9f319a5e9fafffcbba3bbe762\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516105e03803806105e083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161054f61009160003960008181607c01526101f7015261054f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806307ee40bf1461005157806322a15848146100775780635c7fdafc146100c3578063ccae9f3d146100de575b600080fd5b61006461005f366004610424565b6100f9565b6040519081526020015b60405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161006e565b61009e73c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f81565b61009e738751d4196027d4e6da63716fa7786b5174f04c1581565b600073ffffffffffffffffffffffffffffffffffffffff821673c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f14156102a057670de0b6b3a764000073c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f73ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610461565b6040517f07ee40bf000000000000000000000000000000000000000000000000000000008152600060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307ee40bf9060240160206040518083038186803b15801561024e57600080fd5b505afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610461565b610290919061047a565b61029a91906104de565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216738751d4196027d4e6da63716fa7786b5174f04c1514156103be57738751d4196027d4e6da63716fa7786b5174f04c1573ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561032c57600080fd5b505afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103649190610461565b73c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f73ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561019057600080fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c69642d69626274632d72656c617465642d746f6b656e0000000000604482015260640160405180910390fd5b60006020828403121561043657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045a57600080fd5b9392505050565b60006020828403121561047357600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610514577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122026824a70d5e5588aee01b04ce12962783e39db88ce778453a695b129c9fc4f6264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806307ee40bf1461005157806322a15848146100775780635c7fdafc146100c3578063ccae9f3d146100de575b600080fd5b61006461005f366004610424565b6100f9565b6040519081526020015b60405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161006e565b61009e73c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f81565b61009e738751d4196027d4e6da63716fa7786b5174f04c1581565b600073ffffffffffffffffffffffffffffffffffffffff821673c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f14156102a057670de0b6b3a764000073c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f73ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610461565b6040517f07ee40bf000000000000000000000000000000000000000000000000000000008152600060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307ee40bf9060240160206040518083038186803b15801561024e57600080fd5b505afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610461565b610290919061047a565b61029a91906104de565b92915050565b73ffffffffffffffffffffffffffffffffffffffff8216738751d4196027d4e6da63716fa7786b5174f04c1514156103be57738751d4196027d4e6da63716fa7786b5174f04c1573ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561032c57600080fd5b505afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103649190610461565b73c4e15973e6ff2a35cc804c2cf9d2a1b817a8b40f73ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561019057600080fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c69642d69626274632d72656c617465642d746f6b656e0000000000604482015260640160405180910390fd5b60006020828403121561043657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461045a57600080fd5b9392505050565b60006020828403121561047357600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610514577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122026824a70d5e5588aee01b04ce12962783e39db88ce778453a695b129c9fc4f6264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUsd(address)": {
        "params": {
          "token_": "The address of asset"
        },
        "returns": {
          "_priceInUsd": "The USD price"
        }
      }
    },
    "title": "Oracle for ibBTC token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "btcOracle()": {
        "notice": "BTC/USD oracle"
      },
      "getPriceInUsd(address)": {
        "notice": "Get USD (or equivalent) price of an asset"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}