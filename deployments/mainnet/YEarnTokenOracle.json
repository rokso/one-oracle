{
  "address": "0xBd62b012C5020aD8032217683357456f0d804341",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "getPriceInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_priceInUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcdfdd29cd75f26c465cf930752b16b9c9a1e0b2b74cd63caed3818e5a5b57248",
  "receipt": {
    "to": null,
    "from": "0x76d266DFD3754f090488ae12F6Bd115cD7E77eBD",
    "contractAddress": "0xBd62b012C5020aD8032217683357456f0d804341",
    "transactionIndex": 3,
    "gasUsed": "248534",
    "logsBloom": "0x
    "blockHash": "0xe5a6367a95e35f97b0f2ada3b5410b8a6b4eb90589dcf7cbdf2f257692ae8d7e",
    "transactionHash": "0xcdfdd29cd75f26c465cf930752b16b9c9a1e0b2b74cd63caed3818e5a5b57248",
    "logs": [],
    "blockNumber": 15546251,
    "cumulativeGasUsed": "464246",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8b654c506c10a4071125075f82070c93",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"getPriceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUsd(address)\":{\"params\":{\"token_\":\"The address of asset\"},\"returns\":{\"_priceInUsd\":\"The USD price\"}}},\"title\":\"Oracle for Yearn tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPriceInUsd(address)\":{\"notice\":\"Get USD (or equivalent) price of an asset\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/tokens/YEarnTokenOracle.sol\":\"YEarnTokenOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/yearn/IYearn.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IYearn {\\n    function decimals() external view returns (uint8);\\n\\n    function getPricePerFullShare() external view returns (uint256);\\n\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0xece3ee573bcea58fc55b9003fb81644db0b18620374c1eb2cdca2bb5af95051c\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n\\n    /**\\n     * @notice Get quote\\n     * @param tokenIn_ The address of assetIn\\n     * @param tokenOut_ The address of assetOut\\n     * @param amountIn_ Amount of input token\\n     * @return _amountOut Amount out\\n     */\\n    function quote(\\n        address tokenIn_,\\n        address tokenOut_,\\n        uint256 amountIn_\\n    ) external view returns (uint256 _amountOut);\\n\\n    /**\\n     * @notice Get quote in USD (or equivalent) amount\\n     * @param token_ The address of assetIn\\n     * @param amountIn_ Amount of input token.\\n     * @return amountOut_ Amount in USD\\n     */\\n    function quoteTokenToUsd(address token_, uint256 amountIn_) external view returns (uint256 amountOut_);\\n\\n    /**\\n     * @notice Get quote from USD (or equivalent) amount to amount of token\\n     * @param token_ The address of assetOut\\n     * @param amountIn_ Input amount in USD\\n     * @return _amountOut Output amount of token\\n     */\\n    function quoteUsdToToken(address token_, uint256 amountIn_) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0xb48d57d83e75abecacbd065d3df55ee50eef4998fad94560cb1dbb0644049caa\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/ITokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ITokenOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x0a458745d97e56d125d348a597133af8572f34a7830c17d91b82cf8229c1492f\",\"license\":\"MIT\"},\"contracts/periphery/tokens/YEarnTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../interfaces/periphery/ITokenOracle.sol\\\";\\nimport \\\"../../interfaces/periphery/IOracle.sol\\\";\\nimport \\\"../../interfaces/external/yearn/IYearn.sol\\\";\\n\\n/**\\n * @title Oracle for Yearn tokens\\n */\\ncontract YEarnTokenOracle is ITokenOracle {\\n    /// @inheritdoc ITokenOracle\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd) {\\n        IYearn _yToken = IYearn(token_);\\n        uint256 _underlyingPrice = IOracle(msg.sender).getPriceInUsd(_yToken.token());\\n        return (_yToken.getPricePerFullShare() * _underlyingPrice) / 1e18; // getPricePerFullShare is scaled by 1e18\\n    }\\n}\\n\",\"keccak256\":\"0xa06709ac1485ad5d532f07ec133a4f8546525ec9f8bc55cbc69ea9ffb2a49d2f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061038d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806307ee40bf14610030575b600080fd5b61004361003e36600461025e565b610055565b60405190815260200160405180910390f35b60008082905060003373ffffffffffffffffffffffffffffffffffffffff166307ee40bf8373ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100bf57600080fd5b505afa1580156100d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f79190610282565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b15801561015b57600080fd5b505afa15801561016f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610193919061029f565b9050670de0b6b3a7640000818373ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e557600080fd5b505afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d919061029f565b61022791906102b8565b610231919061031c565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461025b57600080fd5b50565b60006020828403121561027057600080fd5b813561027b81610239565b9392505050565b60006020828403121561029457600080fd5b815161027b81610239565b6000602082840312156102b157600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610317577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610352577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220d5632ab061198b3ae463a3daab683d22aa125ded656f75882ab1e2341cdbeb4564736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806307ee40bf14610030575b600080fd5b61004361003e36600461025e565b610055565b60405190815260200160405180910390f35b60008082905060003373ffffffffffffffffffffffffffffffffffffffff166307ee40bf8373ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100bf57600080fd5b505afa1580156100d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f79190610282565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b15801561015b57600080fd5b505afa15801561016f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610193919061029f565b9050670de0b6b3a7640000818373ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e557600080fd5b505afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d919061029f565b61022791906102b8565b610231919061031c565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461025b57600080fd5b50565b60006020828403121561027057600080fd5b813561027b81610239565b9392505050565b60006020828403121561029457600080fd5b815161027b81610239565b6000602082840312156102b157600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610317577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610352577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220d5632ab061198b3ae463a3daab683d22aa125ded656f75882ab1e2341cdbeb4564736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUsd(address)": {
        "params": {
          "token_": "The address of asset"
        },
        "returns": {
          "_priceInUsd": "The USD price"
        }
      }
    },
    "title": "Oracle for Yearn tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPriceInUsd(address)": {
        "notice": "Get USD (or equivalent) price of an asset"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}