{
  "address": "0xfFD74eCF5B4eec6EAC2624764933fb5f2E2DfD09",
  "abi": [
    {
      "inputs": [],
      "name": "IMBTC",
      "outputs": [
        {
          "internalType": "contract ISavingsContractV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMUSD",
      "outputs": [
        {
          "internalType": "contract ISavingsContractV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MBTC",
      "outputs": [
        {
          "internalType": "contract IMasset",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MUSD",
      "outputs": [
        {
          "internalType": "contract IMasset",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mAsset_",
          "type": "address"
        }
      ],
      "name": "getPriceInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7d12f8c1bf95ecea18f7111d963e42fe634890d32f5e51898b79ca0cbff81fd0",
  "receipt": {
    "to": null,
    "from": "0xF5F5195cF6998c57C651f9f0bBFA7cFC72a6FaC1",
    "contractAddress": "0xfFD74eCF5B4eec6EAC2624764933fb5f2E2DfD09",
    "transactionIndex": 297,
    "gasUsed": "678965",
    "logsBloom": "0x
    "blockHash": "0x6f042b412ade20aff8696a9938f998b7197477848beb2c3aae2fdaabe6552ea4",
    "transactionHash": "0x7d12f8c1bf95ecea18f7111d963e42fe634890d32f5e51898b79ca0cbff81fd0",
    "logs": [],
    "blockNumber": 15230616,
    "cumulativeGasUsed": "26379115",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "60a21801151c3a578e76024254551efc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IMBTC\",\"outputs\":[{\"internalType\":\"contract ISavingsContractV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMUSD\",\"outputs\":[{\"internalType\":\"contract ISavingsContractV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MBTC\",\"outputs\":[{\"internalType\":\"contract IMasset\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MUSD\",\"outputs\":[{\"internalType\":\"contract IMasset\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mAsset_\",\"type\":\"address\"}],\"name\":\"getPriceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUsd(address)\":{\"params\":{\"token_\":\"The address of asset\"},\"returns\":{\"_0\":\"The USD price\"}}},\"title\":\"mStable's tokens oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPriceInUsd(address)\":{\"notice\":\"Get USD (or equivalent) price of an asset\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/tokens/MStableTokenOracle.sol\":\"MStableTokenOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/interfaces/external/mstable/IMasset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./MassetStructs.sol\\\";\\n\\ninterface IMasset is IERC20, MassetStructs {\\n    // Mint\\n    function mint(\\n        address _input,\\n        uint256 _inputQuantity,\\n        uint256 _minOutputQuantity,\\n        address _recipient\\n    ) external returns (uint256 mintOutput);\\n\\n    function mintMulti(\\n        address[] calldata _inputs,\\n        uint256[] calldata _inputQuantities,\\n        uint256 _minOutputQuantity,\\n        address _recipient\\n    ) external returns (uint256 mintOutput);\\n\\n    function getMintOutput(address _input, uint256 _inputQuantity) external view returns (uint256 mintOutput);\\n\\n    function getMintMultiOutput(address[] calldata _inputs, uint256[] calldata _inputQuantities)\\n        external\\n        view\\n        returns (uint256 mintOutput);\\n\\n    // Swaps\\n    function swap(\\n        address _input,\\n        address _output,\\n        uint256 _inputQuantity,\\n        uint256 _minOutputQuantity,\\n        address _recipient\\n    ) external returns (uint256 swapOutput);\\n\\n    function getSwapOutput(\\n        address _input,\\n        address _output,\\n        uint256 _inputQuantity\\n    ) external view returns (uint256 swapOutput);\\n\\n    // Redemption\\n    function redeem(\\n        address _output,\\n        uint256 _mAssetQuantity,\\n        uint256 _minOutputQuantity,\\n        address _recipient\\n    ) external returns (uint256 outputQuantity);\\n\\n    function redeemMasset(\\n        uint256 _mAssetQuantity,\\n        uint256[] calldata _minOutputQuantities,\\n        address _recipient\\n    ) external returns (uint256[] memory outputQuantities);\\n\\n    function redeemExactBassets(\\n        address[] calldata _outputs,\\n        uint256[] calldata _outputQuantities,\\n        uint256 _maxMassetQuantity,\\n        address _recipient\\n    ) external returns (uint256 mAssetRedeemed);\\n\\n    function getRedeemOutput(address _output, uint256 _mAssetQuantity) external view returns (uint256 bAssetOutput);\\n\\n    function getRedeemExactBassetsOutput(address[] calldata _outputs, uint256[] calldata _outputQuantities)\\n        external\\n        view\\n        returns (uint256 mAssetAmount);\\n\\n    // Views\\n    function getBasket() external view returns (bool, bool);\\n\\n    function getBasset(address _token) external view returns (BassetPersonal memory personal, BassetData memory data);\\n\\n    function getBassets() external view returns (BassetPersonal[] memory personal, BassetData[] memory data);\\n\\n    function bAssetIndexes(address) external view returns (uint8);\\n\\n    // SavingsManager\\n    function collectInterest() external returns (uint256 swapFeesGained, uint256 newSupply);\\n\\n    function collectPlatformInterest() external returns (uint256 mintAmount, uint256 newSupply);\\n\\n    // Admin\\n    function setCacheSize(uint256 _cacheSize) external;\\n\\n    function upgradeForgeValidator(address _newForgeValidator) external;\\n\\n    function setFees(uint256 _swapFee, uint256 _redemptionFee) external;\\n\\n    function setTransferFeesFlag(address _bAsset, bool _flag) external;\\n\\n    function migrateBassets(address[] calldata _bAssets, address _newIntegration) external;\\n}\\n\",\"keccak256\":\"0xed56b5425956931ce901beaf42bde383d9105fb6976b2e14a02aa3bd05f6b1c6\",\"license\":\"MIT\"},\"contracts/interfaces/external/mstable/ISavingsContractV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ISavingsContractV2 {\\n    function redeemCredits(uint256 _amount) external returns (uint256 underlyingReturned); // V2\\n\\n    function exchangeRate() external view returns (uint256); // V1 & V2\\n}\\n\",\"keccak256\":\"0xd813c9640043910adb766d52c57e3c91d25ec90351f4d18a6555dc9fa4d52b38\",\"license\":\"MIT\"},\"contracts/interfaces/external/mstable/MassetStructs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface MassetStructs {\\n    struct BassetPersonal {\\n        // Address of the bAsset\\n        address addr;\\n        // Address of the bAsset\\n        address integrator;\\n        // An ERC20 can charge transfer fee, for example USDT, DGX tokens.\\n        bool hasTxFee; // takes a byte in storage\\n        // Status of the bAsset\\n        BassetStatus status;\\n    }\\n\\n    struct BassetData {\\n        // 1 Basset * ratio / ratioScale == x Masset (relative value)\\n        // If ratio == 10e8 then 1 bAsset = 10 mAssets\\n        // A ratio is divised as 10^(18-tokenDecimals) * measurementMultiple(relative value of 1 base unit)\\n        uint128 ratio;\\n        // Amount of the Basset that is held in Collateral\\n        uint128 vaultBalance;\\n    }\\n\\n    // Status of the Basset - has it broken its peg?\\n    enum BassetStatus {\\n        Default,\\n        Normal,\\n        BrokenBelowPeg,\\n        BrokenAbovePeg,\\n        Blacklisted,\\n        Liquidating,\\n        Liquidated,\\n        Failed\\n    }\\n\\n    struct BasketState {\\n        bool undergoingRecol;\\n        bool failed;\\n    }\\n\\n    struct InvariantConfig {\\n        uint256 a;\\n        WeightLimits limits;\\n    }\\n\\n    struct WeightLimits {\\n        uint128 min;\\n        uint128 max;\\n    }\\n\\n    struct AmpData {\\n        uint64 initialA;\\n        uint64 targetA;\\n        uint64 rampStartTime;\\n        uint64 rampEndTime;\\n    }\\n}\\n\",\"keccak256\":\"0xb47485281bd10ed4360e93210d237e969b3bb766abb278b8c01cd54794a7b118\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n\\n    /**\\n     * @notice Get quote\\n     * @param tokenIn_ The address of assetIn\\n     * @param tokenOut_ The address of assetOut\\n     * @param amountIn_ Amount of input token\\n     * @return _amountOut Amount out\\n     */\\n    function quote(\\n        address tokenIn_,\\n        address tokenOut_,\\n        uint256 amountIn_\\n    ) external view returns (uint256 _amountOut);\\n\\n    /**\\n     * @notice Get quote in USD (or equivalent) amount\\n     * @param token_ The address of assetIn\\n     * @param amountIn_ Amount of input token.\\n     * @return amountOut_ Amount in USD\\n     */\\n    function quoteTokenToUsd(address token_, uint256 amountIn_) external view returns (uint256 amountOut_);\\n\\n    /**\\n     * @notice Get quote from USD (or equivalent) amount to amount of token\\n     * @param token_ The address of assetOut\\n     * @param amountIn_ Input amount in USD\\n     * @return _amountOut Output amount of token\\n     */\\n    function quoteUsdToToken(address token_, uint256 amountIn_) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0xb48d57d83e75abecacbd065d3df55ee50eef4998fad94560cb1dbb0644049caa\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/ITokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ITokenOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x0a458745d97e56d125d348a597133af8572f34a7830c17d91b82cf8229c1492f\",\"license\":\"MIT\"},\"contracts/periphery/tokens/MStableTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../interfaces/external/mstable/IMasset.sol\\\";\\nimport \\\"../../interfaces/external/mstable/ISavingsContractV2.sol\\\";\\nimport \\\"../../interfaces/periphery/IOracle.sol\\\";\\nimport \\\"../../interfaces/periphery/ITokenOracle.sol\\\";\\n\\n/**\\n * @title mStable's tokens oracle\\n */\\ncontract MStableTokenOracle is ITokenOracle {\\n    uint256 private constant RATIO_DENOMINATOR = 1e8;\\n\\n    IMasset public constant MUSD = IMasset(0xe2f2a5C287993345a840Db3B0845fbC70f5935a5);\\n    ISavingsContractV2 public constant IMUSD = ISavingsContractV2(0x30647a72Dc82d7Fbb1123EA74716aB8A317Eac19);\\n    IMasset public constant MBTC = IMasset(0x945Facb997494CC2570096c74b5F66A3507330a1);\\n    ISavingsContractV2 public constant IMBTC = ISavingsContractV2(0x17d8CBB6Bce8cEE970a4027d1198F6700A7a6c24);\\n\\n    /// @inheritdoc ITokenOracle\\n    function getPriceInUsd(address mAsset_) external view returns (uint256) {\\n        if (mAsset_ == address(MUSD)) return _mAssetUsdPrice(MUSD);\\n        if (mAsset_ == address(IMUSD)) return (IMUSD.exchangeRate() * _mAssetUsdPrice(MUSD)) / 1e18;\\n        if (mAsset_ == address(MBTC)) return _mAssetUsdPrice(MBTC);\\n        if (mAsset_ == address(IMBTC)) return (IMBTC.exchangeRate() * _mAssetUsdPrice(MBTC)) / 1e18;\\n\\n        revert(\\\"invalid-token\\\");\\n    }\\n\\n    /// @notice Return mAsset price\\n    /// @dev Uses the `MasterOracle` (msg.sender) to get underlying assets' prices\\n    function _mAssetUsdPrice(IMasset mAsset_) private view returns (uint256) {\\n        (IMasset.BassetPersonal[] memory bAssetPersonal, IMasset.BassetData[] memory bAssetData) = mAsset_.getBassets();\\n        uint256 _totalValue;\\n        uint256 _len = bAssetData.length;\\n        for (uint256 i; i < _len; i++) {\\n            _totalValue +=\\n                ((uint256(bAssetData[i].vaultBalance * bAssetData[i].ratio)) / RATIO_DENOMINATOR) *\\n                // Note: `msg.sender` is the `MasterOracle` contract\\n                IOracle(msg.sender).getPriceInUsd(bAssetPersonal[i].addr);\\n        }\\n\\n        return _totalValue / mAsset_.totalSupply();\\n    }\\n}\\n\",\"keccak256\":\"0x4b24766ecb8e8de3759699075fa9a45554b646137d891aafdc4abbac4776838a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80635685c387116100505780635685c387146100d2578063cb5690e5146100ed578063f35d2ab61461010857600080fd5b806307ee40bf1461006c57806343a8262114610092575b600080fd5b61007f61007a3660046106b5565b610123565b6040519081526020015b60405180910390f35b6100ad73e2f2a5c287993345a840db3b0845fbc70f5935a581565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b6100ad7317d8cbb6bce8cee970a4027d1198f6700a7a6c2481565b6100ad73945facb997494cc2570096c74b5f66a3507330a181565b6100ad7330647a72dc82d7fbb1123ea74716ab8a317eac1981565b600073ffffffffffffffffffffffffffffffffffffffff821673e2f2a5c287993345a840db3b0845fbc70f5935a5141561017a5761017473e2f2a5c287993345a840db3b0845fbc70f5935a56103df565b92915050565b73ffffffffffffffffffffffffffffffffffffffff82167330647a72dc82d7fbb1123ea74716ab8a317eac19141561027857670de0b6b3a76400006101d273e2f2a5c287993345a840db3b0845fbc70f5935a56103df565b7330647a72dc82d7fbb1123ea74716ab8a317eac1973ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026491906106d9565b61026e9190610721565b610174919061075e565b73ffffffffffffffffffffffffffffffffffffffff821673945facb997494cc2570096c74b5f66a3507330a114156102c75761017473945facb997494cc2570096c74b5f66a3507330a16103df565b73ffffffffffffffffffffffffffffffffffffffff82167317d8cbb6bce8cee970a4027d1198f6700a7a6c24141561037957670de0b6b3a764000061031f73945facb997494cc2570096c74b5f66a3507330a16103df565b7317d8cbb6bce8cee970a4027d1198f6700a7a6c2473ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642d746f6b656e00000000000000000000000000000000000000604482015260640160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff16631d3ce3986040518163ffffffff1660e01b815260040160006040518083038186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104849190810190610949565b80519193509150600090815b818110156105fd573373ffffffffffffffffffffffffffffffffffffffff166307ee40bf8683815181106104c6576104c6610a6e565b6020908102919091010151516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e91906106d9565b6305f5e10085838151811061058557610585610a6e565b6020026020010151600001518684815181106105a3576105a3610a6e565b6020026020010151602001516105b99190610a9d565b6fffffffffffffffffffffffffffffffff166105d5919061075e565b6105df9190610721565b6105e99084610ad5565b9250806105f581610aed565b915050610490565b508573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c91906106d9565b610686908361075e565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106b257600080fd5b50565b6000602082840312156106c757600080fd5b81356106d281610690565b9392505050565b6000602082840312156106eb57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610759576107596106f2565b500290565b600082610794577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107eb576107eb610799565b60405290565b6040516080810167ffffffffffffffff811182821017156107eb576107eb610799565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561085b5761085b610799565b604052919050565b600067ffffffffffffffff82111561087d5761087d610799565b5060051b60200190565b80516fffffffffffffffffffffffffffffffff811681146108a757600080fd5b919050565b600082601f8301126108bd57600080fd5b815160206108d26108cd83610863565b610814565b82815260069290921b840181019181810190868411156108f157600080fd5b8286015b8481101561093e576040818903121561090e5760008081fd5b6109166107c8565b61091f82610887565b815261092c858301610887565b818601528352918301916040016108f5565b509695505050505050565b600080604080848603121561095d57600080fd5b835167ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b815160206109996108cd83610863565b82815260079290921b8401810191818101908a8411156109b857600080fd5b948201945b83861015610a3d576080868c0312156109d65760008081fd5b6109de6107f1565b86516109e981610690565b8152868401516109f881610690565b81850152868801518015158114610a0f5760008081fd5b8189015260608781015160088110610a275760008081fd5b90820152825260809590950194908201906109bd565b91890151919750909450505080831115610a5657600080fd5b5050610a64858286016108ac565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006fffffffffffffffffffffffffffffffff80831681851681830481118215151615610acc57610acc6106f2565b02949350505050565b60008219821115610ae857610ae86106f2565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b1f57610b1f6106f2565b506001019056fea2646970667358221220c19a72e9786a7803992952634bc688281e981e4fe738c8c29ab32f75554b0b0264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80635685c387116100505780635685c387146100d2578063cb5690e5146100ed578063f35d2ab61461010857600080fd5b806307ee40bf1461006c57806343a8262114610092575b600080fd5b61007f61007a3660046106b5565b610123565b6040519081526020015b60405180910390f35b6100ad73e2f2a5c287993345a840db3b0845fbc70f5935a581565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b6100ad7317d8cbb6bce8cee970a4027d1198f6700a7a6c2481565b6100ad73945facb997494cc2570096c74b5f66a3507330a181565b6100ad7330647a72dc82d7fbb1123ea74716ab8a317eac1981565b600073ffffffffffffffffffffffffffffffffffffffff821673e2f2a5c287993345a840db3b0845fbc70f5935a5141561017a5761017473e2f2a5c287993345a840db3b0845fbc70f5935a56103df565b92915050565b73ffffffffffffffffffffffffffffffffffffffff82167330647a72dc82d7fbb1123ea74716ab8a317eac19141561027857670de0b6b3a76400006101d273e2f2a5c287993345a840db3b0845fbc70f5935a56103df565b7330647a72dc82d7fbb1123ea74716ab8a317eac1973ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026491906106d9565b61026e9190610721565b610174919061075e565b73ffffffffffffffffffffffffffffffffffffffff821673945facb997494cc2570096c74b5f66a3507330a114156102c75761017473945facb997494cc2570096c74b5f66a3507330a16103df565b73ffffffffffffffffffffffffffffffffffffffff82167317d8cbb6bce8cee970a4027d1198f6700a7a6c24141561037957670de0b6b3a764000061031f73945facb997494cc2570096c74b5f66a3507330a16103df565b7317d8cbb6bce8cee970a4027d1198f6700a7a6c2473ffffffffffffffffffffffffffffffffffffffff16633ba0b9a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642d746f6b656e00000000000000000000000000000000000000604482015260640160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff16631d3ce3986040518163ffffffff1660e01b815260040160006040518083038186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104849190810190610949565b80519193509150600090815b818110156105fd573373ffffffffffffffffffffffffffffffffffffffff166307ee40bf8683815181106104c6576104c6610a6e565b6020908102919091010151516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e91906106d9565b6305f5e10085838151811061058557610585610a6e565b6020026020010151600001518684815181106105a3576105a3610a6e565b6020026020010151602001516105b99190610a9d565b6fffffffffffffffffffffffffffffffff166105d5919061075e565b6105df9190610721565b6105e99084610ad5565b9250806105f581610aed565b915050610490565b508573ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c91906106d9565b610686908361075e565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106b257600080fd5b50565b6000602082840312156106c757600080fd5b81356106d281610690565b9392505050565b6000602082840312156106eb57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610759576107596106f2565b500290565b600082610794577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107eb576107eb610799565b60405290565b6040516080810167ffffffffffffffff811182821017156107eb576107eb610799565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561085b5761085b610799565b604052919050565b600067ffffffffffffffff82111561087d5761087d610799565b5060051b60200190565b80516fffffffffffffffffffffffffffffffff811681146108a757600080fd5b919050565b600082601f8301126108bd57600080fd5b815160206108d26108cd83610863565b610814565b82815260069290921b840181019181810190868411156108f157600080fd5b8286015b8481101561093e576040818903121561090e5760008081fd5b6109166107c8565b61091f82610887565b815261092c858301610887565b818601528352918301916040016108f5565b509695505050505050565b600080604080848603121561095d57600080fd5b835167ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b815160206109996108cd83610863565b82815260079290921b8401810191818101908a8411156109b857600080fd5b948201945b83861015610a3d576080868c0312156109d65760008081fd5b6109de6107f1565b86516109e981610690565b8152868401516109f881610690565b81850152868801518015158114610a0f5760008081fd5b8189015260608781015160088110610a275760008081fd5b90820152825260809590950194908201906109bd565b91890151919750909450505080831115610a5657600080fd5b5050610a64858286016108ac565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006fffffffffffffffffffffffffffffffff80831681851681830481118215151615610acc57610acc6106f2565b02949350505050565b60008219821115610ae857610ae86106f2565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b1f57610b1f6106f2565b506001019056fea2646970667358221220c19a72e9786a7803992952634bc688281e981e4fe738c8c29ab32f75554b0b0264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUsd(address)": {
        "params": {
          "token_": "The address of asset"
        },
        "returns": {
          "_0": "The USD price"
        }
      }
    },
    "title": "mStable's tokens oracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPriceInUsd(address)": {
        "notice": "Get USD (or equivalent) price of an asset"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}