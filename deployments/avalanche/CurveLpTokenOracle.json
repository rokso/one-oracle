{
  "address": "0x757d531F2Eb1148f003853b51e3F6971e260BE72",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "addressProvider",
      "outputs": [
        {
          "internalType": "contract ICurveAddressProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpToken_",
          "type": "address"
        }
      ],
      "name": "getPriceInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_priceInUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpToken_",
          "type": "address"
        }
      ],
      "name": "registerPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract ICurveRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "underlyingTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8e575002f7ce6085b9437741442036547f9615311935a9874a565073c1192181",
  "receipt": {
    "to": null,
    "from": "0xF5F5195cF6998c57C651f9f0bBFA7cFC72a6FaC1",
    "contractAddress": "0x757d531F2Eb1148f003853b51e3F6971e260BE72",
    "transactionIndex": 0,
    "gasUsed": "715463",
    "logsBloom": "0x
    "blockHash": "0x1f72ae69b115a82b18a8bbf055a0ebde8378d68127fd0a9b16eeb84a55681810",
    "transactionHash": "0x8e575002f7ce6085b9437741442036547f9615311935a9874a565073c1192181",
    "logs": [],
    "blockNumber": 18546584,
    "cumulativeGasUsed": "715463",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3b00cb4db1117bcb9429730108fe71c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"addressProvider\",\"outputs\":[{\"internalType\":\"contract ICurveAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken_\",\"type\":\"address\"}],\"name\":\"getPriceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken_\",\"type\":\"address\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract ICurveRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"underlyingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUsd(address)\":{\"details\":\"This function is supposed to be called from `MasterOracle` only\",\"params\":{\"token_\":\"The address of asset\"},\"returns\":{\"_priceInUsd\":\"The USD price\"}}},\"stateVariables\":{\"addressProvider\":{\"details\":\"Same address for all chains\"}},\"title\":\"Oracle for Curve LP tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPriceInUsd(address)\":{\"notice\":\"Get USD (or equivalent) price of an asset\"},\"poolOf(address)\":{\"notice\":\"LP token => pool\"},\"registerPool(address)\":{\"notice\":\"Register LP token data\"},\"registry()\":{\"notice\":\"Registry contract\"},\"underlyingTokens(address,uint256)\":{\"notice\":\"LP token => coins mapping\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/tokens/CurveLpTokenOracle.sol\":\"CurveLpTokenOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/curve/ICurveAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"./ICurveRegistry.sol\\\";\\n\\ninterface ICurveAddressProvider {\\n    function get_registry() external view returns (ICurveRegistry);\\n\\n    function get_address(uint256 i) external view returns (address);\\n}\\n\",\"keccak256\":\"0xb71003c1b144d89ee42ef9d295f827db12b59bb461b6e229894c5b69ad48bc83\",\"license\":\"MIT\"},\"contracts/interfaces/external/curve/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256);\\n\\n    function remove_liquidity_one_coin(\\n        uint256 _token_amount,\\n        int128 i,\\n        uint256 min_amount\\n    ) external;\\n\\n    function exchange(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x5a4e3ea87689600f682b8d442284c8bfdc83930432d0e57e250880b50b38a251\",\"license\":\"MIT\"},\"contracts/interfaces/external/curve/ICurveRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ICurveRegistry {\\n    function get_n_coins(address lp) external view returns (uint256);\\n\\n    function get_coins(address pool) external view returns (address[8] memory);\\n\\n    function get_pool_from_lp_token(address lp) external view returns (address);\\n}\\n\",\"keccak256\":\"0x601b45b93992ba116f56b61b2cb696a06222abd4f1bdc38b01d4e4df88414ad1\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n\\n    /**\\n     * @notice Get quote\\n     * @param tokenIn_ The address of assetIn\\n     * @param tokenOut_ The address of assetOut\\n     * @param amountIn_ Amount of input token\\n     * @return _amountOut Amount out\\n     */\\n    function quote(\\n        address tokenIn_,\\n        address tokenOut_,\\n        uint256 amountIn_\\n    ) external view returns (uint256 _amountOut);\\n\\n    /**\\n     * @notice Get quote in USD (or equivalent) amount\\n     * @param token_ The address of assetIn\\n     * @param amountIn_ Amount of input token.\\n     * @return amountOut_ Amount in USD\\n     */\\n    function quoteTokenToUsd(address token_, uint256 amountIn_) external view returns (uint256 amountOut_);\\n\\n    /**\\n     * @notice Get quote from USD (or equivalent) amount to amount of token\\n     * @param token_ The address of assetOut\\n     * @param amountIn_ Input amount in USD\\n     * @return _amountOut Output amount of token\\n     */\\n    function quoteUsdToToken(address token_, uint256 amountIn_) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0xb48d57d83e75abecacbd065d3df55ee50eef4998fad94560cb1dbb0644049caa\",\"license\":\"MIT\"},\"contracts/interfaces/periphery/ITokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface ITokenOracle {\\n    /**\\n     * @notice Get USD (or equivalent) price of an asset\\n     * @param token_ The address of asset\\n     * @return _priceInUsd The USD price\\n     */\\n    function getPriceInUsd(address token_) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x0a458745d97e56d125d348a597133af8572f34a7830c17d91b82cf8229c1492f\",\"license\":\"MIT\"},\"contracts/periphery/tokens/CurveLpTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../interfaces/periphery/ITokenOracle.sol\\\";\\nimport \\\"../../interfaces/external/curve/ICurveAddressProvider.sol\\\";\\nimport \\\"../../interfaces/external/curve/ICurveRegistry.sol\\\";\\nimport \\\"../../interfaces/external/curve/ICurvePool.sol\\\";\\nimport \\\"../../interfaces/periphery/IOracle.sol\\\";\\n\\n/**\\n * @title Oracle for Curve LP tokens\\n */\\ncontract CurveLpTokenOracle is ITokenOracle {\\n    /// @dev Same address for all chains\\n    ICurveAddressProvider public constant addressProvider =\\n        ICurveAddressProvider(0x0000000022D53366457F9d5E68Ec105046FC4383);\\n\\n    /// @notice Registry contract\\n    ICurveRegistry public immutable registry;\\n\\n    /// @notice LP token => coins mapping\\n    mapping(address => address[]) public underlyingTokens;\\n\\n    /// @notice LP token => pool\\n    mapping(address => address) public poolOf;\\n\\n    constructor() {\\n        registry = ICurveRegistry(addressProvider.get_registry());\\n    }\\n\\n    /// @inheritdoc ITokenOracle\\n    /// @dev This function is supposed to be called from `MasterOracle` only\\n    function getPriceInUsd(address lpToken_) public view override returns (uint256 _priceInUsd) {\\n        address _pool = poolOf[lpToken_];\\n        require(_pool != address(0), \\\"lp-is-not-registered\\\");\\n        address[] memory _tokens = underlyingTokens[lpToken_];\\n        uint256 _min = type(uint256).max;\\n        uint256 _n = _tokens.length;\\n\\n        for (uint256 i; i < _n; i++) {\\n            // Note: `msg.sender` is the `MasterOracle` contract\\n            uint256 _price = IOracle(msg.sender).getPriceInUsd(_tokens[i]);\\n            if (_price < _min) _min = _price;\\n        }\\n\\n        require(_min < type(uint256).max, \\\"no-min-underlying-price-found\\\");\\n        require(_min > 0, \\\"invalid-min-price\\\");\\n\\n        return (_min * ICurvePool(_pool).get_virtual_price()) / 1e18;\\n    }\\n\\n    /// @notice Register LP token data\\n    function registerPool(address lpToken_) external {\\n        address _pool = poolOf[lpToken_];\\n        require(_pool == address(0), \\\"lp-already-registered\\\");\\n\\n        _pool = registry.get_pool_from_lp_token(lpToken_);\\n        require(_pool != address(0), \\\"invalid-non-factory-lp\\\");\\n\\n        poolOf[lpToken_] = _pool;\\n\\n        uint256 _n = registry.get_n_coins(_pool);\\n        address[8] memory tokens = registry.get_coins(_pool);\\n        for (uint256 i; i < _n; i++) {\\n            underlyingTokens[lpToken_].push(tokens[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x14d2254e1c7d2df5365696a009d5919b504be867c842b9eab39c8160456b5401\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506f22d53366457f9d5e68ec105046fc43836001600160a01b031663a262904b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561005a57600080fd5b505afa15801561006e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009291906100a3565b6001600160a01b03166080526100d3565b6000602082840312156100b557600080fd5b81516001600160a01b03811681146100cc57600080fd5b9392505050565b608051610bf16101026000396000818160f10152818161060701528181610785015261084a0152610bf16000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80637b103999116100505780637b103999146100ec578063988b1fa714610113578063abd908461461014957600080fd5b806301eadec41461007757806307ee40bf146100b45780632954018c146100d5575b600080fd5b61008a6100853660046109a5565b61015e565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c76100c23660046109d1565b6101a3565b6040519081526020016100ab565b61008a6f22d53366457f9d5e68ec105046fc438381565b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b61008a6101213660046109d1565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61015c6101573660046109d1565b610532565b005b6000602052816000526040600020818154811061017a57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526001602052604081205490911680610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6c702d69732d6e6f742d7265676973746572656400000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208181526040808320805482518185028101850190935280835291929091908301828280156102bb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610290575b5050835193945060001993925060009150505b818110156103b75760003373ffffffffffffffffffffffffffffffffffffffff166307ee40bf868481518110610306576103066109f5565b60200260200101516040518263ffffffff1660e01b8152600401610346919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60206040518083038186803b15801561035e57600080fd5b505afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610a24565b9050838110156103a4578093505b50806103af81610a6c565b9150506102ce565b506000198210610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6e6f2d6d696e2d756e6465726c79696e672d70726963652d666f756e640000006044820152606401610230565b6000821161048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c69642d6d696e2d70726963650000000000000000000000000000006044820152606401610230565b670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105149190610a24565b61051e9084610a87565b6105289190610aa6565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600160205260409020541680156105c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6c702d616c72656164792d7265676973746572656400000000000000000000006044820152606401610230565b6040517fbdf475c300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063bdf475c39060240160206040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610af1565b905073ffffffffffffffffffffffffffffffffffffffff8116610700576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c69642d6e6f6e2d666163746f72792d6c70000000000000000000006044820152606401610230565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001685851690811790915590517f940494f1000000000000000000000000000000000000000000000000000000008152600481019190915290917f0000000000000000000000000000000000000000000000000000000000000000169063940494f19060240160206040518083038186803b1580156107c757600080fd5b505afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190610a24565b6040517f9ac90d3d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690639ac90d3d906024016101006040518083038186803b15801561088d57600080fd5b505afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190610b0e565b905060005b828110156109795773ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020828260088110610909576109096109f5565b6020908102919091015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558061097181610a6c565b9150506108ca565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109a257600080fd5b50565b600080604083850312156109b857600080fd5b82356109c381610980565b946020939093013593505050565b6000602082840312156109e357600080fd5b81356109ee81610980565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019821415610a8057610a80610a3d565b5060010190565b6000816000190483118215151615610aa157610aa1610a3d565b500290565b600082610adc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8051610aec81610980565b919050565b600060208284031215610b0357600080fd5b81516109ee81610980565b6000610100808385031215610b2257600080fd5b83601f840112610b3157600080fd5b60405181810181811067ffffffffffffffff82111715610b7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052908301908085831115610b8f57600080fd5b845b83811015610bb057610ba281610ae1565b825260209182019101610b91565b50909594505050505056fea2646970667358221220ff95414d97270aa1e5344f94cbaee6779bf145dbe84b441ff1f505b9294b82e264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80637b103999116100505780637b103999146100ec578063988b1fa714610113578063abd908461461014957600080fd5b806301eadec41461007757806307ee40bf146100b45780632954018c146100d5575b600080fd5b61008a6100853660046109a5565b61015e565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c76100c23660046109d1565b6101a3565b6040519081526020016100ab565b61008a6f22d53366457f9d5e68ec105046fc438381565b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b61008a6101213660046109d1565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61015c6101573660046109d1565b610532565b005b6000602052816000526040600020818154811061017a57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526001602052604081205490911680610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6c702d69732d6e6f742d7265676973746572656400000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208181526040808320805482518185028101850190935280835291929091908301828280156102bb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610290575b5050835193945060001993925060009150505b818110156103b75760003373ffffffffffffffffffffffffffffffffffffffff166307ee40bf868481518110610306576103066109f5565b60200260200101516040518263ffffffff1660e01b8152600401610346919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60206040518083038186803b15801561035e57600080fd5b505afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610a24565b9050838110156103a4578093505b50806103af81610a6c565b9150506102ce565b506000198210610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6e6f2d6d696e2d756e6465726c79696e672d70726963652d666f756e640000006044820152606401610230565b6000821161048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c69642d6d696e2d70726963650000000000000000000000000000006044820152606401610230565b670de0b6b3a76400008473ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105149190610a24565b61051e9084610a87565b6105289190610aa6565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600160205260409020541680156105c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6c702d616c72656164792d7265676973746572656400000000000000000000006044820152606401610230565b6040517fbdf475c300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063bdf475c39060240160206040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610af1565b905073ffffffffffffffffffffffffffffffffffffffff8116610700576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c69642d6e6f6e2d666163746f72792d6c70000000000000000000006044820152606401610230565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001685851690811790915590517f940494f1000000000000000000000000000000000000000000000000000000008152600481019190915290917f0000000000000000000000000000000000000000000000000000000000000000169063940494f19060240160206040518083038186803b1580156107c757600080fd5b505afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190610a24565b6040517f9ac90d3d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690639ac90d3d906024016101006040518083038186803b15801561088d57600080fd5b505afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190610b0e565b905060005b828110156109795773ffffffffffffffffffffffffffffffffffffffff85166000908152602081905260409020828260088110610909576109096109f5565b6020908102919091015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558061097181610a6c565b9150506108ca565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109a257600080fd5b50565b600080604083850312156109b857600080fd5b82356109c381610980565b946020939093013593505050565b6000602082840312156109e357600080fd5b81356109ee81610980565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610a3657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019821415610a8057610a80610a3d565b5060010190565b6000816000190483118215151615610aa157610aa1610a3d565b500290565b600082610adc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8051610aec81610980565b919050565b600060208284031215610b0357600080fd5b81516109ee81610980565b6000610100808385031215610b2257600080fd5b83601f840112610b3157600080fd5b60405181810181811067ffffffffffffffff82111715610b7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052908301908085831115610b8f57600080fd5b845b83811015610bb057610ba281610ae1565b825260209182019101610b91565b50909594505050505056fea2646970667358221220ff95414d97270aa1e5344f94cbaee6779bf145dbe84b441ff1f505b9294b82e264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUsd(address)": {
        "details": "This function is supposed to be called from `MasterOracle` only",
        "params": {
          "token_": "The address of asset"
        },
        "returns": {
          "_priceInUsd": "The USD price"
        }
      }
    },
    "stateVariables": {
      "addressProvider": {
        "details": "Same address for all chains"
      }
    },
    "title": "Oracle for Curve LP tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPriceInUsd(address)": {
        "notice": "Get USD (or equivalent) price of an asset"
      },
      "poolOf(address)": {
        "notice": "LP token => pool"
      },
      "registerPool(address)": {
        "notice": "Register LP token data"
      },
      "registry()": {
        "notice": "Registry contract"
      },
      "underlyingTokens(address,uint256)": {
        "notice": "LP token => coins mapping"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15461,
        "contract": "contracts/periphery/tokens/CurveLpTokenOracle.sol:CurveLpTokenOracle",
        "label": "underlyingTokens",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 15466,
        "contract": "contracts/periphery/tokens/CurveLpTokenOracle.sol:CurveLpTokenOracle",
        "label": "poolOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      }
    }
  }
}